services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    image: ${DOCKER_CONTAINER_IMAGE:-schimidt/observability:latest}
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DOCKER_CONTAINER_IMAGE=${DOCKER_CONTAINER_IMAGE:-schimidt/observability:latest}
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/rules/rules-for-alert-manager.yml:/etc/prometheus/rules-for-alert-manager.yml
    depends_on:
      - app
    networks:
      - monitoring

  alert-manager:
    image: prom/alertmanager:latest
    container_name: alert-manager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    depends_on:
      - prometheus
    networks:
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686" # the jaeger UI port
      - "4317:4317" # the open telemetry grpc port for sending traces
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
      - OTEL_TRACES_SAMPLER=always_off
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=123
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/configs/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./monitoring/grafana/configs/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
        - monitoring

networks:
  monitoring:
    driver: bridge